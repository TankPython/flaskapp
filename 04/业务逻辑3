1.获取短信验证码
    后端：
        1.获取图片验证码的值和图片的id
        2.校验图片验证码；参数完整性/从redis中取出真实的图片验证码/
          判断图片验证码是否过期/删除redis中的图片验证码，防止用户使用同一个图片验证码验证多次/
          与用户填写的图片验证码的值进行对比，错误就返回结果/
          判断对于这个手机号的操作，在60秒内有没有之前的记录，如果有，则认为用户操作频繁，不接受处理/
          判断手机号是否存在，如果手机号不存在，则生成短信验证码/
          保存真实的短信验证码/保存发送给这个手机号的记录，防止用户在60s内再次出发发送短信的操作/
          发送短信/返回发送状态
    前端：
        1.发送get的ajax的请求；url地址包括手机号；携带图片验证码的值和id
        2.如果发送成功就显示读秒；

2.注册：
    1.请求的参数： 手机号、短信验证码、密码、确认密码
    2.校验参数/判断手机号格式/从redis中取出短信验证码/判断短信验证码是否过期
         删除redis中的短信验证码，防止重复使用校验/判断用户填写短信验证码的正确性/
         保存用户的注册数据到数据库中/保存登录状态到session中
         /返回结果；

    前端
        1.调用ajax向后端发送注册请求/ 请求头，将csrf_token值放到请求中，方便后端csrf进行验证
        url，type，data，contentType，dataType，headers
        2. 注册成功，跳转到主页。否则将弹出异常信息

笔记：
    1,盐值  密码加密添加随机字符串 generate_password_hash(value) 加密会添加盐值
    2.方法变属性(property)
    3.get 带参数   use "request.args.get"
     request.form.get("key", type=str, default=None) 获取表单数据，request.args.get("key") 获取get请求参数，request.values.get("key") 获取所有参数。推荐使用request.values.get().
    4.if not all 参数的完整性
    5.redis 数据库查询为什么要捕获异常    因为redis连接是网络连接可能发生错误
    6.转换器没用是因为，要先有转换器再有蓝图    注册蓝图时所有的路由由app进行托管，似乎扫描了一遍；  导包所谓的扫描，会执行里面的代码比如打印
    7.csrf 模型类
    8.判断手机号格式re.match(r"1[34578]\d{9}", mobile)
    9.数据库错误就是手机号重复码？  异常是由sqlalchelmy封装提供的
    10.contentType: "application/json",    //该形式可以使服务器处理复杂请求体的json数据
    11.var resq_json = JSON.stringify(resq_data);   json 转换
    12.flask:json_dict = request.get_json()  django:dict=request.POST django是以post或者get请求形式
    13.500 请求头错误  400 url地址后面多了斜杠      405  两种情况
    14.利用flask-session，将session数据保存到redis中到时候该怎么操作就怎么操作；
    15.django 的事物操作1.将一个http request的所有数据库操作包裹在一个transaction中
       2.通过transaction中间件对http请求的事务拦截3.自己在view中通过装饰器灵活控制事务
    16.数据库迁移做一波笔记 三个命令，upgrade后才会建表  migrate不支持中文